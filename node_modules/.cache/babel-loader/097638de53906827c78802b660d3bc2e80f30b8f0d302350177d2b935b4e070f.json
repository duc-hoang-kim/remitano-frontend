{"ast":null,"code":"var _jsxFileName = \"/Users/hoangkimduc/remitano/remitano_frontend/src/pages/RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, TextField, Typography, styled } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport ConfirmationInstruction from \"../features/authentication/components/ConfirmationInstruction\";\nimport useRegister from \"../features/authentication/hooks/useRegister\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledBox = styled(Box)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    margin: \"auto\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"90vw\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"40vw\"\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"30vw\"\n    }\n  };\n});\n_c = StyledBox;\nconst RegisterPage = props => {\n  _s();\n  var _errors$passwordConfi;\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    submit,\n    data,\n    error\n  } = useRegister({\n    email: watch('email'),\n    password: watch('password'),\n    passwordConfirmation: watch('passwordConfirmation'),\n    onSuccess: () => {\n      setFormSubmitted(true);\n    }\n  });\n  const onSubmit = data => {\n    setFormSubmitted(true);\n  };\n  if (formSubmitted) return /*#__PURE__*/_jsxDEV(ConfirmationInstruction, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        textAlign: \"center\"\n      },\n      children: \"Register Funny Movies Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\",\n        marginTop: \"35px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(StyledBox, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Email\",\n            variant: \"outlined\",\n            sx: {\n              width: \"100%\"\n            },\n            ...register(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Password\",\n            variant: \"outlined\",\n            type: \"password\",\n            sx: {\n              width: \"100%\",\n              marginTop: \"20px\"\n            },\n            ...register(\"password\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Password confirmation\",\n            variant: \"outlined\",\n            type: \"password\",\n            sx: {\n              width: \"100%\",\n              marginTop: \"20px\"\n            },\n            ...register(\"passwordConfirmation\", {\n              validate: val => {\n                if (watch('password') != val) {\n                  return \"Password confirmation doesn't match\";\n                }\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"red\",\n            children: (_errors$passwordConfi = errors.passwordConfirmation) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          sx: {\n            marginTop: \"20px\",\n            marginBottom: '20px'\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Already had an account? \", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => navigate('/login'),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"Yhj0A6uIZ6pTYMH1r4yNjShN6ec=\", false, function () {\n  return [useNavigate, useForm, useRegister];\n});\n_c2 = RegisterPage;\nexport default RegisterPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledBox\");\n$RefreshReg$(_c2, \"RegisterPage\");","map":{"version":3,"names":["Box","Button","TextField","Typography","styled","useState","useForm","useNavigate","ConfirmationInstruction","useRegister","jsxDEV","_jsxDEV","StyledBox","_ref","theme","margin","breakpoints","down","width","up","_c","RegisterPage","props","_s","_errors$passwordConfi","formSubmitted","setFormSubmitted","navigate","register","handleSubmit","watch","formState","errors","submit","data","error","email","password","passwordConfirmation","onSuccess","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","sx","textAlign","marginTop","id","label","type","validate","val","color","message","marginBottom","onClick","_c2","$RefreshReg$"],"sources":["/Users/hoangkimduc/remitano/remitano_frontend/src/pages/RegisterPage.tsx"],"sourcesContent":["import { Box, Button, TextField, Typography, styled } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport ConfirmationInstruction from \"../features/authentication/components/ConfirmationInstruction\";\nimport useRegister from \"../features/authentication/hooks/useRegister\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  margin: \"auto\",\n  [theme.breakpoints.down(\"md\")]: {\n    width: \"90vw\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    width: \"40vw\",\n  },\n  [theme.breakpoints.up(\"lg\")]: {\n    width: \"30vw\",\n  },\n}));\n\ntype Props = {};\n\ntype InputsType = {\n  email: string;\n  password: string;\n  passwordConfirmation: string\n};\n\nconst RegisterPage = (props: Props) => {\n  const [formSubmitted, setFormSubmitted] = useState(false)\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<InputsType>();\n  const { submit, data, error } = useRegister({\n    email: watch('email'),\n    password: watch('password'),\n    passwordConfirmation: watch('passwordConfirmation'),\n    onSuccess: () => {\n      setFormSubmitted(true);\n    }\n  });\n  const onSubmit: SubmitHandler<InputsType> = (data) => {\n    setFormSubmitted(true)\n  };\n\n  if (formSubmitted) return <ConfirmationInstruction/>\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" sx={{ textAlign: \"center\" }}>\n        Register Funny Movies Account\n      </Typography>\n\n      <Box sx={{ textAlign: \"center\", marginTop: \"35px\" }}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <StyledBox>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Email\"\n              variant=\"outlined\"\n              sx={{ width: \"100%\" }}\n              {...register(\"email\")}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              sx={{ width: \"100%\", marginTop: \"20px\" }}\n              {...register(\"password\")}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Password confirmation\"\n              variant=\"outlined\"\n              type=\"password\"\n              sx={{ width: \"100%\", marginTop: \"20px\" }}\n              {...register(\"passwordConfirmation\", {\n                validate: (val:string) => {\n                  if (watch('password') != val) {\n                    return \"Password confirmation doesn't match\";\n                  }\n                }\n              })}\n            />\n            <Typography color='red'>{errors.passwordConfirmation?.message}</Typography>\n          </StyledBox>\n          <Typography color='red'>{}</Typography>\n          <Button variant=\"contained\" type=\"submit\" sx={{ marginTop: \"20px\", marginBottom: '20px' }}>\n            Register\n          </Button>\n          <Typography>\n            Already had an account? <Button variant=\"text\" onClick={() => navigate('/login')}>Login</Button>\n          </Typography>\n        </form>\n      </Box>\n    </Box>\n  );\n}\n\nexport default RegisterPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}