{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport useFetch from \"../../../hooks/useFetch\";\nconst useLoadVideos = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    pageIndex\n  } = _ref;\n  const path = 'api/v1/videos';\n  const {\n    data,\n    isLoading,\n    error,\n    total,\n    useFetchApi\n  } = useFetch({\n    path: path,\n    method: 'GET',\n    params: {\n      page: pageIndex\n    }\n  });\n  const parsedData = data == null ? [] : data.map(raw_video => ({\n    id: raw_video.id,\n    youtubeUrl: raw_video.youtube_url,\n    youtubeId: raw_video.youtube_id,\n    sharedBy: raw_video.shared_by,\n    upvoteCount: raw_video.upvote_count,\n    downvoteCount: raw_video.downvote_count,\n    description: raw_video.description,\n    title: raw_video.title,\n    createdAt: raw_video.created_at,\n    updatedAt: raw_video.updated_at\n  }));\n  _s(useEffect(_s(() => {\n    _s();\n    useFetchApi();\n  }, \"qenIdL5WJy/vmVh/QxY90/QmSks=\", false, function () {\n    return [useFetchApi];\n  }), [pageIndex]), \"qenIdL5WJy/vmVh/QxY90/QmSks=\", false, function () {\n    return [useFetchApi];\n  });\n  return {\n    data: parsedData,\n    isLoading,\n    error,\n    total\n  };\n};\n_s2(useLoadVideos, \"qVfVWRB/MBq2a7XHPJRwyWJ+3d8=\", false, function () {\n  return [useFetch];\n});\nexport default useLoadVideos;","map":{"version":3,"names":["useEffect","useFetch","useLoadVideos","_ref","_s2","_s","$RefreshSig$","pageIndex","path","data","isLoading","error","total","useFetchApi","method","params","page","parsedData","map","raw_video","id","youtubeUrl","youtube_url","youtubeId","youtube_id","sharedBy","shared_by","upvoteCount","upvote_count","downvoteCount","downvote_count","description","title","createdAt","created_at","updatedAt","updated_at"],"sources":["/Users/hoangkimduc/remitano/remitano_frontend/src/features/videos/hooks/useLoadVideos.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { VideoType } from \"../types\";\n\ntype useLoadVideosProps = {\n  pageIndex: number;\n}\n\nconst useLoadVideos = ({ pageIndex }: useLoadVideosProps) => {\n  const path = 'api/v1/videos'\n  const { data, isLoading, error, total, useFetchApi } = useFetch({ path: path, method: 'GET', params: { page: pageIndex }})\n\n  const parsedData: VideoType[] = data == null ? [] : (data as any[]).map(raw_video =>\n    ({\n      id: raw_video.id,\n      youtubeUrl: raw_video.youtube_url,\n      youtubeId: raw_video.youtube_id,\n      sharedBy: raw_video.shared_by,\n      upvoteCount: raw_video.upvote_count,\n      downvoteCount: raw_video.downvote_count,\n      description: raw_video.description,\n      title: raw_video.title,\n      createdAt: raw_video.created_at,\n      updatedAt: raw_video.updated_at\n    }) as VideoType\n  )\n\n    useEffect(()=>{\n      useFetchApi()\n    }, [pageIndex])\n\n  return { data: parsedData, isLoading, error, total }\n}\n\nexport default useLoadVideos\n"],"mappings":";AAAA,SAASA,SAAS,QAAkB,OAAO;AAC3C,OAAOC,QAAQ,MAAM,yBAAyB;AAO9C,MAAMC,aAAa,GAAGC,IAAA,IAAuC;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,IAAtC;IAAEC;EAA8B,CAAC,GAAAJ,IAAA;EACtD,MAAMK,IAAI,GAAG,eAAe;EAC5B,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGZ,QAAQ,CAAC;IAAEO,IAAI,EAAEA,IAAI;IAAEM,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAE;MAAEC,IAAI,EAAET;IAAU;EAAC,CAAC,CAAC;EAE1H,MAAMU,UAAuB,GAAGR,IAAI,IAAI,IAAI,GAAG,EAAE,GAAIA,IAAI,CAAWS,GAAG,CAACC,SAAS,KAC9E;IACCC,EAAE,EAAED,SAAS,CAACC,EAAE;IAChBC,UAAU,EAAEF,SAAS,CAACG,WAAW;IACjCC,SAAS,EAAEJ,SAAS,CAACK,UAAU;IAC/BC,QAAQ,EAAEN,SAAS,CAACO,SAAS;IAC7BC,WAAW,EAAER,SAAS,CAACS,YAAY;IACnCC,aAAa,EAAEV,SAAS,CAACW,cAAc;IACvCC,WAAW,EAAEZ,SAAS,CAACY,WAAW;IAClCC,KAAK,EAAEb,SAAS,CAACa,KAAK;IACtBC,SAAS,EAAEd,SAAS,CAACe,UAAU;IAC/BC,SAAS,EAAEhB,SAAS,CAACiB;EACvB,CAAC,CAAc,CAChB;EAEC/B,EAAA,CAAAL,SAAS,CAAAK,EAAA,CAAC,MAAI;IAAAA,EAAA;IACZQ,WAAW,EAAE;EACf,CAAC;IAAA,QADCA,WAAW;EAAA,IACV,CAACN,SAAS,CAAC,CAAC;IAAA,QADbM,WAAW;EAAA;EAGf,OAAO;IAAEJ,IAAI,EAAEQ,UAAU;IAAEP,SAAS;IAAEC,KAAK;IAAEC;EAAM,CAAC;AACtD,CAAC;AAAAR,GAAA,CAxBKF,aAAa;EAAA,QAEsCD,QAAQ;AAAA;AAwBjE,eAAeC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}