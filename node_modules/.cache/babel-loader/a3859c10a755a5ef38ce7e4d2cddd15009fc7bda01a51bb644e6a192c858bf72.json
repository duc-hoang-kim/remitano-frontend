{"ast":null,"code":"var _jsxFileName = \"/Users/hoangkimduc/remitano/remitano-frontend/src/pages/RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, TextField, Typography, styled } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport useRegister from \"../features/authentication/hooks/useRegister\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledBox = styled(Box)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    margin: \"auto\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"90vw\"\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"40vw\"\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"30vw\"\n    }\n  };\n});\n_c = StyledBox;\nconst RegisterPage = () => {\n  _s();\n  var _errors$passwordConfi;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    data,\n    error,\n    fetchRegistry\n  } = useRegister({\n    onSuccess: () => {\n      navigate('/login');\n    }\n  });\n  const onSubmit = data => {\n    fetchRegistry({\n      user: {\n        email: data.email,\n        password: data.password,\n        password_confirmation: data.passwordConfirmation\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        textAlign: \"center\"\n      },\n      children: \"Register Funny Movies Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\",\n        marginTop: \"35px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(StyledBox, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Email\",\n            variant: \"outlined\",\n            sx: {\n              width: \"100%\"\n            },\n            ...register(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Password\",\n            variant: \"outlined\",\n            type: \"password\",\n            sx: {\n              width: \"100%\",\n              marginTop: \"20px\"\n            },\n            ...register(\"password\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Password confirmation\",\n            variant: \"outlined\",\n            type: \"password\",\n            sx: {\n              width: \"100%\",\n              marginTop: \"20px\"\n            },\n            ...register(\"passwordConfirmation\", {\n              validate: val => {\n                if (watch(\"password\") != val) {\n                  return \"Password confirmation doesn't match\";\n                }\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"red\",\n            children: (_errors$passwordConfi = errors.passwordConfirmation) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"red\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          sx: {\n            marginTop: \"20px\",\n            marginBottom: \"20px\"\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Already had an account?\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => navigate(\"/login\"),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"NbMf1yQTFbNaTzW9wEUF31nLCGk=\", false, function () {\n  return [useNavigate, useForm, useRegister];\n});\n_c2 = RegisterPage;\nexport default RegisterPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledBox\");\n$RefreshReg$(_c2, \"RegisterPage\");","map":{"version":3,"names":["Box","Button","TextField","Typography","styled","useForm","useNavigate","useRegister","jsxDEV","_jsxDEV","StyledBox","_ref","theme","margin","breakpoints","down","width","up","_c","RegisterPage","_s","_errors$passwordConfi","navigate","register","handleSubmit","watch","formState","errors","data","error","fetchRegistry","onSuccess","onSubmit","user","email","password","password_confirmation","passwordConfirmation","children","variant","sx","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","id","label","type","validate","val","color","message","marginBottom","onClick","_c2","$RefreshReg$"],"sources":["/Users/hoangkimduc/remitano/remitano-frontend/src/pages/RegisterPage.tsx"],"sourcesContent":["import { Box, Button, TextField, Typography, styled } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport useRegister from \"../features/authentication/hooks/useRegister\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  margin: \"auto\",\n  [theme.breakpoints.down(\"md\")]: {\n    width: \"90vw\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    width: \"40vw\",\n  },\n  [theme.breakpoints.up(\"lg\")]: {\n    width: \"30vw\",\n  },\n}));\n\ntype InputsType = {\n  email: string;\n  password: string;\n  passwordConfirmation: string;\n};\n\nconst RegisterPage = () => {\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<InputsType>();\n  const { data, error, fetchRegistry } = useRegister({\n    onSuccess: () => {\n      navigate('/login');\n    },\n  });\n  const onSubmit: SubmitHandler<InputsType> = (data) => {\n    fetchRegistry({\n      user: {\n        email: data.email,\n        password: data.password,\n        password_confirmation: data.passwordConfirmation,\n      },\n    });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" sx={{ textAlign: \"center\" }}>\n        Register Funny Movies Account\n      </Typography>\n\n      <Box sx={{ textAlign: \"center\", marginTop: \"35px\" }}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <StyledBox>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Email\"\n              variant=\"outlined\"\n              sx={{ width: \"100%\" }}\n              {...register(\"email\")}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              sx={{ width: \"100%\", marginTop: \"20px\" }}\n              {...register(\"password\")}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Password confirmation\"\n              variant=\"outlined\"\n              type=\"password\"\n              sx={{ width: \"100%\", marginTop: \"20px\" }}\n              {...register(\"passwordConfirmation\", {\n                validate: (val: string) => {\n                  if (watch(\"password\") != val) {\n                    return \"Password confirmation doesn't match\";\n                  }\n                },\n              })}\n            />\n            <Typography color=\"red\">\n              {errors.passwordConfirmation?.message}\n            </Typography>\n          </StyledBox>\n          <Typography color=\"red\">{error}</Typography>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n          >\n            Register\n          </Button>\n          <Typography>\n            Already had an account?{\" \"}\n            <Button variant=\"text\" onClick={() => navigate(\"/login\")}>\n              Login\n            </Button>\n          </Typography>\n        </form>\n      </Box>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}