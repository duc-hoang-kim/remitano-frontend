{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = _ref => {\n  _s();\n  let {\n    path,\n    method,\n    params\n  } = _ref;\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const body = method === \"GET\" ? null : params;\n  const url = `${process.env.REACT_APP_REMITANO_BACKEND_URL}/${path}` + (method === \"GET\" ? new URLSearchParams(params) : \"\");\n  useEffect(() => {\n    fetch(url, {\n      method: method,\n      body: JSON.stringify(body)\n    }).then(res => res.json()).then(response => {\n      setError(response.error);\n      setData(response.data);\n      setIsLoading(false);\n    });\n  }, [url, body]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(useFetch, \"NLQY2vF4dB+Dc2eT5bTUJ0mK6RY=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","_ref","_s","path","method","params","data","setData","isLoading","setIsLoading","error","setError","body","url","process","env","REACT_APP_REMITANO_BACKEND_URL","URLSearchParams","fetch","JSON","stringify","then","res","json","response"],"sources":["/Users/hoangkimduc/remitano/remitano_frontend/src/hooks/useFetch.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ndeclare var process: {\n  env: {\n    REACT_APP_REMITANO_BACKEND_URL: string;\n  };\n};\n\ntype useFetchProps = {\n  path: string;\n  method: \"POST\" | \"GET\" | \"PUT\" | \"PATCH\" | \"DELETE\";\n  params: any;\n};\n\nconst useFetch = ({ path, method, params }: useFetchProps) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const body = method === \"GET\" ? null : params;\n  const url =\n    `${process.env.REACT_APP_REMITANO_BACKEND_URL}/${path}` + (method === \"GET\"\n    ? new URLSearchParams(params)\n    : \"\");\n\n  useEffect(() => {\n    fetch(url, {\n      method: method,\n      body: JSON.stringify(body),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setError(response.error);\n        setData(response.data);\n        setIsLoading(false);\n      });\n  }, [url, body]);\n\n  return { data, isLoading, error };\n};\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAc3C,MAAMC,QAAQ,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAsB,CAAC,GAAAJ,IAAA;EACvD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,IAAI,GAAGR,MAAM,KAAK,KAAK,GAAG,IAAI,GAAGC,MAAM;EAC7C,MAAMQ,GAAG,GACN,GAAEC,OAAO,CAACC,GAAG,CAACC,8BAA+B,IAAGb,IAAK,EAAC,IAAIC,MAAM,KAAK,KAAK,GACzE,IAAIa,eAAe,CAACZ,MAAM,CAAC,GAC3B,EAAE,CAAC;EAEPP,SAAS,CAAC,MAAM;IACdoB,KAAK,CAACL,GAAG,EAAE;MACTT,MAAM,EAAEA,MAAM;MACdQ,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACR,IAAI;IAC3B,CAAC,CAAC,CACCS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAK;MAClBb,QAAQ,CAACa,QAAQ,CAACd,KAAK,CAAC;MACxBH,OAAO,CAACiB,QAAQ,CAAClB,IAAI,CAAC;MACtBG,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACI,GAAG,EAAED,IAAI,CAAC,CAAC;EAEf,OAAO;IAAEN,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACR,EAAA,CAxBIF,QAAQ;AAyBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}