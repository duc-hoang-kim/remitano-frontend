{"ast":null,"code":"import{useAuthenticate}from\"../../../contexts/AuthContext\";import useFetch from\"../../../hooks/useFetch\";var useLogin=function useLogin(){var _useAuthenticate=useAuthenticate(),logInAs=_useAuthenticate.logInAs;var _useFetch=useFetch({path:\"api/v1/users/sign_in\",method:\"POST\",onSuccess:function onSuccess(res_body){var user={email:res_body.data.user.email};logInAs(user);}}),data=_useFetch.data,error=_useFetch.error,fetchApi=_useFetch.fetchApi;return{data:data,error:error,fetchLogin:fetchApi};};export default useLogin;","map":{"version":3,"names":["useAuthenticate","useFetch","useLogin","_useAuthenticate","logInAs","_useFetch","path","method","onSuccess","res_body","user","email","data","error","fetchApi","fetchLogin"],"sources":["/Users/hoangkimduc/remitano/remitano-frontend/src/features/authentication/hooks/useLogin.ts"],"sourcesContent":["import { useAuthenticate } from \"../../../contexts/AuthContext\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { UserType } from \"../types\";\n\nconst useLogin = () => {\n  const { logInAs } = useAuthenticate();\n\n  const { data, error, fetchApi } = useFetch({\n    path: \"api/v1/users/sign_in\",\n    method: \"POST\",\n    onSuccess: (res_body) => {\n      const user: UserType = { email: res_body.data.user.email };\n      logInAs(user);\n    }\n  });\n\n\n  return { data, error, fetchLogin: fetchApi };\n};\n\nexport default useLogin;\n"],"mappings":"AAAA,OAASA,eAAe,KAAQ,+BAA+B,CAC/D,MAAO,CAAAC,QAAQ,KAAM,yBAAyB,CAG9C,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACrB,IAAAC,gBAAA,CAAoBH,eAAe,EAAE,CAA7BI,OAAO,CAAAD,gBAAA,CAAPC,OAAO,CAEf,IAAAC,SAAA,CAAkCJ,QAAQ,CAAC,CACzCK,IAAI,CAAE,sBAAsB,CAC5BC,MAAM,CAAE,MAAM,CACdC,SAAS,CAAE,SAAAA,UAACC,QAAQ,CAAK,CACvB,GAAM,CAAAC,IAAc,CAAG,CAAEC,KAAK,CAAEF,QAAQ,CAACG,IAAI,CAACF,IAAI,CAACC,KAAM,CAAC,CAC1DP,OAAO,CAACM,IAAI,CAAC,CACf,CACF,CAAC,CAAC,CAPME,IAAI,CAAAP,SAAA,CAAJO,IAAI,CAAEC,KAAK,CAAAR,SAAA,CAALQ,KAAK,CAAEC,QAAQ,CAAAT,SAAA,CAARS,QAAQ,CAU7B,MAAO,CAAEF,IAAI,CAAJA,IAAI,CAAEC,KAAK,CAALA,KAAK,CAAEE,UAAU,CAAED,QAAS,CAAC,CAC9C,CAAC,CAED,cAAe,CAAAZ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}