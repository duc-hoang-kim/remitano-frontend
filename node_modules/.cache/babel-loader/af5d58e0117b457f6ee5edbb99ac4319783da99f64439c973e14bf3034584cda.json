{"ast":null,"code":"var _s = $RefreshSig$();\nimport useFetch from \"../../../hooks/useFetch\";\nconst useLoadVideos = _ref => {\n  _s();\n  let {\n    pageIndex\n  } = _ref;\n  const path = 'api/v1/videos';\n  const params = {\n    page: pageIndex\n  };\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch({\n    path: path,\n    method: 'GET',\n    params: params\n  });\n  const parsedData = data != null && data.map(raw_video => {\n    vidoe;\n  });\n  return;\n};\n_s(useLoadVideos, \"RQM2hOi0YBdFiuN+4RI1Hgu/+T8=\", false, function () {\n  return [useFetch];\n});\nexport default useLoadVideos;","map":{"version":3,"names":["useFetch","useLoadVideos","_ref","_s","pageIndex","path","params","page","data","isLoading","error","method","parsedData","map","raw_video","vidoe"],"sources":["/Users/hoangkimduc/remitano/remitano_frontend/src/features/videos/hooks/useLoadVideos.ts"],"sourcesContent":["import useFetch from \"../../../hooks/useFetch\";\n\ntype useLoadVideosProps = {\n  pageIndex: number;\n}\n\nconst useLoadVideos = ({ pageIndex }: useLoadVideosProps) => {\n  const path = 'api/v1/videos'\n  const params = { page: pageIndex }\n  const { data, isLoading, error } = useFetch({ path: path, method: 'GET', params: params})\n  const parsedData = data != null && (data as any[]).map((raw_video) => {\n    vidoe\n  })\n\n  return\n}\n\nexport default useLoadVideos\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,yBAAyB;AAM9C,MAAMC,aAAa,GAAGC,IAAA,IAAuC;EAAAC,EAAA;EAAA,IAAtC;IAAEC;EAA8B,CAAC,GAAAF,IAAA;EACtD,MAAMG,IAAI,GAAG,eAAe;EAC5B,MAAMC,MAAM,GAAG;IAAEC,IAAI,EAAEH;EAAU,CAAC;EAClC,MAAM;IAAEI,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGV,QAAQ,CAAC;IAAEK,IAAI,EAAEA,IAAI;IAAEM,MAAM,EAAE,KAAK;IAAEL,MAAM,EAAEA;EAAM,CAAC,CAAC;EACzF,MAAMM,UAAU,GAAGJ,IAAI,IAAI,IAAI,IAAKA,IAAI,CAAWK,GAAG,CAAEC,SAAS,IAAK;IACpEC,KAAK;EACP,CAAC,CAAC;EAEF;AACF,CAAC;AAAAZ,EAAA,CATKF,aAAa;EAAA,QAGkBD,QAAQ;AAAA;AAQ7C,eAAeC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}